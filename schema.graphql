type Owner @entity {
  id: ID!
  punkPurchased: Purchase
  punkAssigned: Assigned
  punkTransfered: CryptoPunkTransfer
  punkBid: Bid
  punkOffer: Offer
  cTokenOwned: cTokenTransfer
  transaction: Transaction

}
type CryptoPunk @entity {
  "Punk Index"
  id: ID!
  "Query ctoken data"
  ctoken: cToken
  "Punk"
  punk: BigInt!
  "Owner"
  OwnedBy: [Owner!] #Use BoughtFrom address as ID
  "Current punk bid"
  currentBid: Bid
  "Current punk offer"
  currentOffer: Offer
  "All punk Bids"
  bids: [Bid!]
  "Current punk Offers"
  offers: [Offer!]
  "All punk purchases"
  purchase: Purchase
  "Current punk transfered"
  punkTransfer: CryptoPunkTransfer
  "All punk transfers"
  punkTransfers: [CryptoPunkTransfer!]
  "Transaction Data"
  transaction: Transaction

}


type Bid @entity{
  "Punk Index"
    id: ID!
  "Query bid for specific user"
  bidsBy: Owner
  "punk bidded"
  punk: CryptoPunk
  "Bids Withdrawn"
  bidWithdrawn: Withdrawn @derivedFrom (field:"withdrawnBid")  
  "Current punk bid"
  currentBid: Owner
  "Current punk offer"
  currentOffer: Owner
  "Address of Bidder" 
  bidder: Bytes!
  "Address of all Bidders"  
  bidders: [Bytes!]!
  "Amount bidded"
  bid: BigInt!
  "All bids"
  bids: [BigInt!]!
  "Transaction Data"
  transaction: Transaction

}

type Transaction @entity {  
  "Transaction Hash"
  id: ID!
  "Query user transaction data"
  ownerTransactions: Owner  
  "cToken Transactions"
  ctoken: cToken
  "CryptoPunkTransfer Transactions"
  punkTransfers: CryptoPunkTransfer
  "Punk"
  punk: CryptoPunk
  "Query Assign transactions"
  assigned: Assigned
  "Query transactions of Offers"
  offer: Offer
  "Transaction Date" 
  date: BigInt!
  "Transaction Block" 
  block: BigInt!
  
}


type cToken @entity {
  "cToken Contact address: 0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"  
  id: ID!
  "Token symbol"
  symbol: String!
  "Token name"
  name: String!
  "Punk"
  punk: CryptoPunk
  "True/False if all Cryptopunks have been assigned"
  allPunksAssigned: Boolean!
  "cToken Transfer data" 
  transfers: cTokenTransfer 
  "Total supply of Crytopunk tokens"
  totalSupply: BigInt!
  "The hash of the composite image of all the Cryptopunks"
  imageHash: String!
  "Transaction date" 
  transaction: Transaction
}

type Purchase @entity {
  "Punk Index"
  id: ID!
  "Query User data"
  purchaseBy: Owner


  "Cryptopunk purchased"
  punkIndex: BigInt!

  "Query punk data against purchases"
  punk: CryptoPunk   

  "Address of Buyer" 
  buyer: Bytes!
  "Bought for"
  amount: BigInt!

  "Seller"
  seller: Bytes!

  "Transaction Data"
  transaction: Transaction
}


type Assigned @entity {
  "Punk Index"
  id: ID!
  "Query User data"
  assignedTo: Owner!

  "Address Cryptopunk was assigned"
  assigned: Bytes!
  "CryptoPunk index assigned"
  punkAssigned: BigInt!

  "Cryptopunks remaining to assign"
  punksRemainingToAssign: BigInt!
  
  "Transaction Data"
  transaction: Transaction
}



type cTokenTransfer @entity {
  "cToken Contact address: 0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
  id: ID!
  "Query user data"
  OwnedBy: Owner

  "cToken data"
  ctoken: cToken 
  "Cryptopunk data"
  punk: CryptoPunk

  "Sender"
  transferedFrom: Bytes!
  allTransfersTo: [Bytes!]

  "Receiver"
  transferedTo: Bytes!
  allTransfersFrom: [Bytes!]

  "Amount of Crytopunk transfered"
  amountTransfered: BigInt!

  "Transaction data"
  transaction: Transaction

}


type CryptoPunkTransfer @entity {
  "Punk" 
  id: ID!
  "Sender"
  sender: Bytes
  "Receiver"
  receiver: Bytes

  "Unique Cryptopunk index"
  punk: BigInt!
  transfersBy: Owner

  "Transaction Data"
  transaction: Transaction
}

type Offer @entity {
  "Punk Index"
  id: ID!
  "Query Ctoken data"
  ctoken: cToken
  "Query user data"
  offersBy: Owner
  "Punk"
  punk: CryptoPunk!
  "Amount offered"
  minimumAmount: BigInt!
  "Address being Offered"
  offeredTo: Bytes!
  "Punk offer"
  offer: BigInt!
  "All offers for Punk"
  offers: [BigInt!]
  "Transaction Data"
  transaction: Transaction
}

type Withdrawn @entity {
  "Punk"
  id: ID!
  "User data"
  withdrawnBy: Owner
  "Withdrawn from"
  withdrawnFrom: Bytes!
  "Unique Cryptopunk index"  
  punkIndex: BigInt!
  "Amount withdrawn"
  amountWithdrawn: BigInt!
  "Query punk data"
  punk:CryptoPunk
  withdrawnBid: Bid
  "Transaction Data"
  transaction: Transaction
}

type NotForSale @entity {
  "Punk"
  id: ID!
  "User data"
  Owner: Owner
  "Unique Cryptopunk index"  
  punkIndex: BigInt!
  "Query punk data"
  punk: CryptoPunk!
  "Transaction Data"
  transaction: Transaction
}