type Owner @entity {
  "Owner address"
  id: ID!

  "Purchases by Owner"
  punkPurchased: Purchase

  "Punk assigned to owner (if any)"
  punkAssigned: Assigned

  "Punk transfers by Owner"
  punkTransfered: CryptoPunkTransfer

  "Bids by Owner"
  punkBid: Bid

  "Offers by Owner"
  punkOffer: Offer

  "cToken transfers by Owner"
  cTokenTransfered: cTokenTransfer
  
  "Owner transaction data"
  transaction: Transaction

}


type CryptoPunk @entity {
  "Punk Index"
  id: ID!

  "Punk"
  punk: BigInt!

  "Owner"
  OwnedBy: Owner #Used boughtFrom address as owner ID

  "Bids for Punk"
  bid: Bid

  "Offers for punk"
  offer: Offer

  "Purchases of punk"
  purchase: Purchase

  "Punk transfers"
  punkTransfer: CryptoPunkTransfer

  "Transaction data"
  transaction: Transaction

}


type Bid @entity{
  "Punk Index"
    id: ID!

  "Bids by Owner"
  bidsBy: Owner

  "punk bidded"
  punk: CryptoPunk

  "Bids Withdrawn"
  bidWithdrawn: Withdrawn @derivedFrom (field:"withdrawnBid") 

  "Address of Bidder" 
  bidder: Bytes!

  "Amount bidded"
  bid: BigInt!

  "Transaction data"
  transaction: Transaction

}

type Transaction @entity {  
  "Transaction Hash"
  id: ID!

  "Owner transactions"
  ownerTransactions: Owner  
  
  "cToken Transactions"
  ctoken: cToken

  "CryptoPunkTransfer transactions"
  punkTransfers: CryptoPunkTransfer

  "Punk"
  punk: CryptoPunk

  "Assign transactions"
  assigned: Assigned

  "Offer transactions"
  offer: Offer

  "Transaction date" 
  date: BigInt!

  "Transaction block" 
  block: BigInt!
  
}


type cToken @entity {
  "cToken Owner"  
  id: ID!

  "Token symbol"
  symbol: String

  "Token name"
  name: String
  
  "Contract Address"
  address: Bytes

  "True/False if all Cryptopunks have been assigned"
  allPunksAssigned: Boolean

  "cToken Transfer data" 
  transfers: cTokenTransfer 

  "Total supply of Crytopunk tokens"
  totalSupply: BigInt

  "The hash of the composite image of all the Cryptopunks"
  imageHash: String

  "Transaction date" 
  transaction: Transaction
}

type Purchase @entity {
  "Punk Index"
  id: ID!

  "Query User data"
  purchaseBy: Owner #Used buyer address as owner ID

  "Cryptopunk purchased"
  punkIndex: BigInt!

  "Punk data"
  punk: CryptoPunk   

  "Address of Buyer" 
  buyer: Bytes!

  "amount in ETH"
  amount: BigInt!

  "Seller"
  seller: Bytes!

  "Transaction data"
  transaction: Transaction
}


type Assigned @entity {
  "Punk Index"
  id: ID!

  "Query User data"
  assignedTo: Owner

  "Address Cryptopunk was assigned"
  assigned: Bytes!

  "CryptoPunk index assigned"
  punkAssigned: BigInt!

  "Cryptopunks remaining to assign"
  punksRemainingToAssign: BigInt!
  
  "Transaction data"
  transaction: Transaction
}


type cTokenTransfer @entity {
  "cToken Owner"
  id: ID!

  "Owner"
  ownedBy: Owner #Used transferedTo address as owner ID

  "cToken data"
  ctoken: cToken #Used transferedTo address as cToken owner ID

  "Punk data"
  punk: CryptoPunk

  "Sender"
  transferedFrom: Bytes!

  "Receiver"
  transferedTo: Bytes!

  "Amount of punk transfered"
  amountTransfered: BigInt!

  "Transaction data"
  transaction: Transaction

}


type CryptoPunkTransfer @entity {
  "Punk" 
  id: ID!

  "Owner"
  ownedBy: Owner #Used receiver address as owner ID

  "Sender"
  sender: Bytes!

  "Receiver"
  receiver: Bytes!

  "Punk transfered"
  punk: BigInt!

  "Transaction data"
  transaction: Transaction
}


type Offer @entity {
  "Punk Index"
  id: ID!

  "Offers by Owner"
  offersBy: Owner #Used offeredTo address as owner ID

  "Punk"
  punk: CryptoPunk

  "Amount offered"
  amountOffered: BigInt!

  "Address being Offered"
  offeredTo: Bytes!

  "Punk being offered"
  punkOffered: BigInt!

  "Transaction data"
  transaction: Transaction
}


type Withdrawn @entity {
  "Punk"
  id: ID!

  "Owner" 
  withdrawnBy: Owner #Used withdrawnFrom address as owner ID

  "Withdrawn from"
  withdrawnFrom: Bytes!

  "Unique Cryptopunk index"  
  punkIndex: BigInt!

  "Amount withdrawn"
  amountWithdrawn: BigInt!

  "Punk data"
  punk: CryptoPunk

  "Bids withdrawn"
  withdrawnBid: Bid

  "Transaction data"
  transaction: Transaction
}


type NotForSale @entity {
  "Punk"
  id: ID!

  "punk"  
  punkIndex: BigInt!

  "Transaction data"
  transaction: Transaction
}