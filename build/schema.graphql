type Owner @entity {
  "Ethereum Address"
  id: ID!

  "Punk data"
  punk: CryptoPunk

  "All punks owned by Owner"
  allpunksOwned: [CryptoPunk!] @derivedFrom (field: "owner")

  "Purchases by Owner"
  punkPurchased: [Purchase!]! @derivedFrom (field: "buyer")

  "Punk assigned to owner (if any)"
  punkAssigned: [Assigned!]! @derivedFrom (field: "assignedTo")

  "Punk transfer by Owner"
  punkTransfered: [CryptoPunkTransfer!]! @derivedFrom (field: "ownedBy")

  "Query Bids to Owner or by Owner"
  punkBid: [Bid!]! @derivedFrom (field: "owner")

  "Punks offered for sale by Owner"
  punkOfferedForSale: [Offer]! @derivedFrom (field: "offeredBy")

  "cToken transfers by Owner"
  cTokenTransfered: [cTokenTransfer!]! @derivedFrom (field: "ownedBy")
  
  "Owner transaction data"
  transaction: [Transaction!]! @derivedFrom (field: "owner")

}


type CryptoPunk @entity {
  "Punk"
  id: ID!

  "Punk owner"
  owner: Owner!

  "Punk holder"
  transferedTo: Owner
  
  "Assigned"
  assignedTo: Owner
  
  "Punk buyer"
  purchasedBy: Owner

  "Bid for Punk"
  bid: [Bid!] @derivedFrom (field: "punk")

  "Offer for punk"
  offer: [Offer!]! @derivedFrom (field: "punkOfferedForSale")

  "Purchase of punk"
  purchase: [Purchase!]! @derivedFrom (field: "punk")

  "Punk transfer"
  punkTransfer: [CryptoPunkTransfer!]! @derivedFrom (field: "punk")

  "Transaction data"
  transaction: [Transaction!]! @derivedFrom (field: "punk")

}

type cToken @entity {
  "Owner"  
  id: ID! #Used transferedTo address from cTokenTransfer as ID

  "Token symbol"
  symbol: String

  "Token name"
  name: String
  
  "Contract Address"
  address: Bytes

  "True/False if all Cryptopunks have been assigned"
  allPunksAssigned: Boolean

  "cToken Transfer data" 
  transfers: [cTokenTransfer!]! @derivedFrom (field: "ctoken")

  "Total supply of CryptoPunk tokens"
  totalSupply: BigInt

  "The hash of the composite image of all the Cryptopunks"
  imageHash: String

  "Transaction date" 
  transaction: [Transaction!]! @derivedFrom (field: "ctoken")
}

type Assigned @entity {
  "Punk"
  id: ID!

  "Owner"
  assignedTo: Owner!

  "CryptoPunk assigned"
  punk: CryptoPunk

  "Cryptopunks remaining to assign"
  punksRemainingToAssign: BigInt!
  
  "Transaction data"
  transaction: Transaction
}

type Purchase @entity {
  "Punk"
  id: ID! 

  "Owner"
  buyer: Owner #Used the buyer address below as owner ID

  "Punk purchased"
  punk: CryptoPunk   

  "amount in ETH"
  amount: BigInt!

  "Seller"
  seller: Bytes!

  "Transaction data"
  transaction: Transaction
}


type Offer @entity {
  "Punk Index"
  id: ID!

  "Offer by Owner"
  offeredBy: Owner!

  "Punk being offered for Sale"
  punkOfferedForSale: CryptoPunk

  "Amount offered"
  amountOffered: BigInt

  "Transaction data"
  transaction: Transaction
}


type Bid @entity{
  "Punk"
    id: ID!

  "Owner of punk bidded"
  owner: Owner

  "punk bidded"
  punk: CryptoPunk

  "Bids Withdrawn"
  bidWithdrawn: WithdrawnBid

  "Address of Bidder" 
  bidder: Bytes

  "Amount bidded"
  bid: BigInt

  "Transaction data"
  transaction: Transaction

}


type WithdrawnBid @entity {
  "Punk"
  id: ID!

  "Owner" 
  withdrawnBy: Owner #Used withdrawnFrom address in Withdrawn as owner ID

  "Punk data"
  punk: CryptoPunk

  "Amount withdrawn"
  amountWithdrawn: BigInt

  "Bid withdrawn"
  bid: Bid

  "Transaction data"
  transaction: Transaction
}

type NotForSale @entity {
  "Punk"
  id: ID!

  "punk"  
  punkIndex: BigInt!

  "Transaction data"
  transaction: Transaction
}

type cTokenTransfer @entity {
  "Owner"
  id: ID! #Used transferedTo address below as ID

  "Address of Receiver as Owner ID"
  ownedBy: Owner

  "cToken data"
  ctoken: cToken #Used transferedTo address as cToken owner ID

  "Punk data"
  punk: CryptoPunk

  "Sender"
  transferedFrom: Bytes!

  "Receiver"
  transferedTo: Bytes!

  "Amount of punk transfered"
  amountTransfered: BigInt!

  "Transaction data"
  transaction: Transaction

}


type CryptoPunkTransfer @entity {
  "Punk" 
  id: ID!

  "Owner"
  ownedBy: Owner #Used receiver address as Owner ID

  "Sender"
  sender: Bytes

  "Receiver"
  receiver: Bytes

  "Punk transfered"
  punk: CryptoPunk

  "Transaction data"
  transaction: Transaction
}


type Transaction @entity {  
  "Transaction Hash"
  id: ID!

  "Owner transaction data"
  owner: Owner  
  
  "cToken Transaction data"
  ctoken: cToken

  "CryptoPunkTransfer transaction data"
  punkTransfers: CryptoPunkTransfer

  "Punk"
  punk: CryptoPunk

  "Assign transaction data"
  assigned: Assigned

  "Offer transaction data"
  offer: Offer

  "Bid transaction data"
  bid: Bid

  "Transaction date" 
  date: BigInt!

  "Transaction block" 
  block: BigInt!
  
}